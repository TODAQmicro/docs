openapi: 3.0.3
info:
  title: TODAQMicro Commodity API
  description: |

    The commodity object represents a transactable entity (e.g. A video, concert ticket, etc.)

    Related guides:

    - [Reactive payments](http://localhost:4321/guide/reactive-payment/)
    - [Transparent payment button](http://localhost:4321/guide/transparent/)



    ## The Commodity Object
    ### Attributes

    ```javascript
    {
        "hash": "17c7f31e-34e1-4fee-b569-46f793877df4",
        "descriptor": "ARCADE.PONG",
        "dq": "410ddbac7c8a259da8dfcc5f55bcb28b77d29be9c540a2c23444b416d584801c30",
        "cost": 50,
        "hostname": "41622cd3b78e361489de8dedf2b591a4.micro-staging.biz.todaq.net"
    }
    ```

  contact:
    name: TODAQMicro
    url: https://docs.m.todaq.net
    email: support@todaq.net
  version: 3.0.0
servers:
  - url: https://pay.m.todaq.net

paths:
  /v2/commodity:
    post:
      summary: Create a Commodity
      description: Create a commodity with a cost and a descriptor to be used in receipts upon purchase.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descriptor:
                  type: string
                  description: A description of what this commodity represents
                dq:
                  type: string
                  description: What DQ to accept
                cost:
                  type: int
                  description: Cost of the commodity
                twin_id:
                  type: int
                  description: Twin ID to associate with this commodity

      responses:
        201:
          description: The payment is valid and has been marked as spent
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    description: The newly created commodity hash
                    type: string
                  descriptor:
                    description: The provided description
                    type: string
                  dq:
                    description: The provided DQ hash
                    type: string
                  cost:
                    description: The provided commodity cost
                    type: int
                  hostname:
                    description: The hostname of the provided twin
                    type: string
                  embed:
                    description: HTML code to put in a purchase button for the newly created commodity
                    type: string

        500:
          description: Could not create a commodity


  /v2/commodity/{hash}:
    get:
      summary: Get Commodity Info
      description: Get the commodity object
      parameters:
        - in: path
          name: hash
          required: true
          description: Commodity hash
          schema:
            type: string
      responses:
        200:
          description: The payment is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    description: The commodity hash
                    type: string
                  descriptor:
                    description: The commodity description
                    type: string
                  dq:
                    description: The commodity hash
                    type: string
                  cost:
                    description: The commodity cost
                    type: int
                  hostname:
                    description: The hostname of the commodity twin
                    type: string
                  embed:
                    description: HTML code to put in a purchase button for the newly created commodity
                    type: string
        404:
          description: No commodity found
